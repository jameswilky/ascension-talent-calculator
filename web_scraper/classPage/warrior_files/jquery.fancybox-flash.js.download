 /*!
 * Flash helper for fancyBox
 * version: 1.0.0
 * @requires fancyBox v2.0 or later
 *
 * Usage:
 *     $(".fancybox").fancybox({
 *         helpers : {
 *             flash: {
 *                 position : 'top'
 *             }
 *         }
 *     });
 *
 */
(function ($) {
	//Shortcut for fancyBox object
	var F = $.fancybox;

	//Add helper object
	F.helpers.flash = {
		defaults : {
			color: '#FFF',
			speedIn: 400,
			speedOut: 400
		},
		
		flash : null,	// Current Handle

		beforeLoad: function (opts, obj) {
			//alert("beforeLoad");
			if (!this.flash) {
				this.flash = $('<div class="fancybox-flash"></div>').appendTo( F.coming ? F.coming.parent : opts.parent );
				this.flash.width('auto').height('auto');
				this.flash.css('background', 'rgba(255,255,255,1)');
			}
			
			this.flash.fadeIn(opts.speedIn);
			
		
			//Remove self if gallery do not have at least two items

			/*if (opts.skipSingle && obj.group.length < 2) {
				obj.helpers.buttons = false;
				obj.closeBtn = true;

				return;
			}

			//Increase top margin to give space for buttons
			obj.margin[ opts.position === 'bottom' ? 2 : 0 ] += 30;*/
		},
		
		beforeShow: function (opts, obj) {
			//alert("beforeShow");
		},

		afterShow: function (opts, obj) {
			//alert("afterShow");
			
			this.flash.fadeOut(opts.speedOut);
			/*var buttons = this.buttons;

			if (!buttons) {
				this.list = $(opts.tpl).addClass(opts.position).appendTo('body');

				buttons = {
					prev   : this.list.find('.btnPrev').click( F.prev ),
					next   : this.list.find('.btnNext').click( F.next ),
					play   : this.list.find('.btnPlay').click( F.play ),
					toggle : this.list.find('.btnToggle').click( F.toggle ),
					close  : this.list.find('.btnClose').click( F.close )
				}
			}

			//Prev
			if (obj.index > 0 || obj.loop) {
				buttons.prev.removeClass('btnDisabled');
			} else {
				buttons.prev.addClass('btnDisabled');
			}

			//Next / Play
			if (obj.loop || obj.index < obj.group.length - 1) {
				buttons.next.removeClass('btnDisabled');
				buttons.play.removeClass('btnDisabled');

			} else {
				buttons.next.addClass('btnDisabled');
				buttons.play.addClass('btnDisabled');
			}

			this.buttons = buttons;

			this.onUpdate(opts, obj);*/
		},

		beforeClose: function () {
			this.flash.remove().hide();
			if (this.flash)
				this.flash = null;
		}
	};

}(jQuery));
